{"version":3,"file":"static/js/489.0462446b.chunk.js","mappings":"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","sources":["components/GoBack/GoBack.styled.jsx","components/GoBack/GoBack.jsx","components/MoviesPage/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/MoviesPage/MovieDetailsPage/MovieDetailsPage.jsx","utils/http-services/themoviedb-api-service.js","hooks/useFetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GoBackBtn = styled.button``;\n","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { GoBackBtn } from './GoBack.styled';\n\nexport default function GoBack({ to }) {\n  const navigate = useNavigate();\n\n  return <GoBackBtn onClick={() => navigate(to)}>Go back</GoBackBtn>;\n}\n\nGoBack.propTypes = {\n  to: PropTypes.object.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n`;\n\nexport const PageBlockHeader = styled.h3``;\n\nexport const AboutMovie = styled.div`\n  display: flex;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 15vw;\n  margin-right: 2rem;\n`;\n\nexport const MovieInfo = styled.div`\n  display: block;\n`;\n\nexport const MovieTitle = styled.h2``;\n\nexport const MovieScore = styled.p``;\n\nexport const MovieOverview = styled.p`\n  width: 35vw;\n`;\n\nexport const MovieGenres = styled.p`\n  width: 35vw;\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-right: 1rem;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from '../../../vendors';\nimport { useFetchMovies } from '../../../hooks';\nimport noPoster from '../../../images/no_poster.jpg';\nimport GoBack from '../../GoBack/GoBack.jsx';\nimport {\n  Wrapper,\n  AboutMovie,\n  MoviePoster,\n  MovieInfo,\n  MovieTitle,\n  MovieScore,\n  MovieOverview,\n  MovieGenres,\n  PageBlockHeader,\n  StyledLink,\n} from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const fetchAboutMovie = '/movie';\n  const imgBaseUrl = 'https://image.tmdb.org/t/p';\n  const movieId = useParams().itemId;\n  const imgSize = '/original';\n\n  const { state } = useLocation();\n  const { fetchedMovies, loading, error } = useFetchMovies(\n    fetchAboutMovie + `/${movieId}`\n  );\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    fetchedMovies || {};\n\n  toast.error(error?.message);\n\n  return (\n    <>\n      <GoBack to={state?.from ?? '/'} />\n      {error && <Toaster />}\n      {fetchedMovies && (\n        <Wrapper>\n          <AboutMovie>\n            <MoviePoster\n              alt=\"movie poster\"\n              src={\n                poster_path ? `${imgBaseUrl}${imgSize}${poster_path}` : noPoster\n              }\n            />\n            <MovieInfo>\n              <MovieTitle>\n                {title} ({release_date.substring(0, 4)})\n              </MovieTitle>\n              <MovieScore>User score: {vote_average * 10} %</MovieScore>\n              <PageBlockHeader>Overview</PageBlockHeader>\n              <MovieOverview>{overview}</MovieOverview>\n              <PageBlockHeader>Genres</PageBlockHeader>\n              <MovieGenres>\n                {genres.map(({ name }) => name).join(' ')}\n              </MovieGenres>\n            </MovieInfo>\n          </AboutMovie>\n          <hr />\n          <PageBlockHeader>Additional information</PageBlockHeader>\n          <StyledLink to=\"cast\" state={{ from: state?.from }}>\n            Cast\n          </StyledLink>\n          <StyledLink to=\"reviews\" state={{ from: state?.from }}>\n            Reviews\n          </StyledLink>\n          <hr />\n          <Outlet context={[fetchedMovies]} />\n        </Wrapper>\n      )}\n      {loading && <Loader />}\n    </>\n  );\n}\n","const axios = require('axios');\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'f979c5d182d240e48ce15515a9f4d973';\nconst AUTH_TYPE = '3';\nconst DEFAULT_LANGUAGE = 'en-US';\nconst ADULT_CONTENT = false;\nconst APPENDED_MOVIE_DETAILS = 'credits,reviews';\n\nexport const themoviedbApiService = (fetchParameter, searchQuery) => {\n  axios.defaults.baseURL = BASE_URL;\n  return axios\n    .get(`${AUTH_TYPE}/${fetchParameter}`, {\n      params: {\n        api_key: API_KEY,\n        language: DEFAULT_LANGUAGE,\n        include_adult: ADULT_CONTENT,\n        query: searchQuery,\n        append_to_response: APPENDED_MOVIE_DETAILS,\n      },\n    })\n    .then(({ data }) => {\n      if (data) {\n        return data;\n      } else {\n        throw new Error('Search error');\n      }\n    });\n};\n","import { useState, useEffect } from 'react';\n\nimport { themoviedbApiService } from '../utils';\n\nexport const useFetchMovies = (fetchParameter, searchQuery) => {\n  const [fetchedMovies, setFetchedMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      try {\n        if (searchQuery === null) {\n          return;\n        }\n        const fetchedData = await themoviedbApiService(\n          fetchParameter,\n          searchQuery\n        );\n        return setFetchedMovies(fetchedData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [fetchParameter, searchQuery]);\n  return { fetchedMovies, loading, error };\n};\n"],"names":["GoBackBtn","styled","GoBack","to","navigate","useNavigate","onClick","Wrapper","PageBlockHeader","AboutMovie","MoviePoster","MovieInfo","MovieTitle","MovieScore","MovieOverview","MovieGenres","StyledLink","Link","MovieDetailsPage","movieId","useParams","itemId","state","useLocation","useFetchMovies","fetchedMovies","loading","error","poster_path","title","release_date","vote_average","overview","genres","toast","message","from","alt","src","noPoster","substring","map","name","join","context","axios","require","themoviedbApiService","fetchParameter","searchQuery","defaults","baseURL","get","params","api_key","language","include_adult","query","append_to_response","then","data","Error","useState","setFetchedMovies","setLoading","setError","useEffect","fetchedData","fetchData"],"sourceRoot":""}