{"version":3,"file":"static/js/265.de72fa6f.chunk.js","mappings":"iPAEe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OAAO,mBAAQC,QAAS,kBAAMF,GAAU,IAAjC,qBCGM,SAASG,IACtB,IACMC,GAAUC,EAAAA,EAAAA,MAAYC,OAK5B,GAA0CC,EAAAA,EAAAA,GANlB,SAOP,WAAOH,IADhBI,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,MAOhC,OAHAC,QAAQC,IAAIF,GACZC,QAAQC,IAAIJ,IAGV,iCACE,SAACT,EAAD,IACCS,IACC,iCACE,gBACEK,IAAI,eACJC,IACEN,EAAcO,YAAd,UAnBO,8BAmBP,OAjBI,SAiBJ,OAC8BP,EAAcO,aACxCC,KAGR,yBAAMR,EAAcS,SACpB,yBAAMT,EAAcU,YACpB,SAAC,KAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,KAAMb,EAAcc,QAAQD,MAArD,mBAGA,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEG,QAASf,EAAce,SAAnD,sBAGA,SAAC,KAAD,OAGHd,IAAW,SAAC,IAAD,S,yGC9CZe,EAAQC,EAAQ,MAQTC,EAAuB,SAACC,EAAgBC,GAEnD,OADAJ,EAAMK,SAASC,QARA,6BASRN,EACJO,IADI,UAPS,IAOT,YACgBJ,GAAkB,CACrCK,OAAQ,CACNC,QAXQ,mCAYRC,SAViB,QAWjBC,cAVc,MAWdC,MAAOR,EACPS,mBAXuB,qBAc1BC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,GAAIA,EACF,OAAOA,EAEP,MAAM,IAAIC,MAAM,oBCpBXjC,EAAiB,SAACoB,EAAgBC,GAC7C,OAA0Ca,EAAAA,EAAAA,UAAS,MAAnD,eAAOjC,EAAP,KAAsBkC,EAAtB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOhC,EAAP,KAAgBkC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAO/B,EAAP,KAAckC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACEF,GAAW,GADb,SAGwB,OAAhBf,EAHR,iEAM8BF,EACxBC,EACAC,GARN,cAMUkB,EANV,yBAUWJ,EAAiBI,IAV5B,kCAYIF,EAAS,EAAD,IAZZ,yBAcID,GAAW,GAdf,8EADc,uBAAC,WAAD,wBAkBdI,KACC,CAACpB,EAAgBC,IACb,CAAEpB,cAAAA,EAAeC,QAAAA,EAASC,MAAAA,K","sources":["components/GoBackBtn/GoBackBtn.jsx","components/MoviesPage/MovieDetailsPage/MovieDetailsPage.jsx","utils/http-services/themoviedb-api-service.js","hooks/useFetchMovies.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\n\nexport default function GoBackBtn() {\n  const navigate = useNavigate();\n\n  return <button onClick={() => navigate(-1)}>Go back</button>;\n}\n","import { Link, Outlet, useParams } from 'react-router-dom';\n\nimport { Loader } from '../../../vendors';\nimport { useFetchMovies } from '../../../hooks';\n\nimport noPoster from '../../../images/no_poster.jpg';\nimport GoBackBtn from '../../GoBackBtn/GoBackBtn.jsx';\n\nexport default function MovieDetailsPage() {\n  const fetchAboutMovie = '/movie';\n  const movieId = useParams().itemId;\n  const imgBaseUrl = 'https://image.tmdb.org/t/p';\n  // const imgSize = '/original';\n  const imgSize = '/w300';\n\n  const { fetchedMovies, loading, error } = useFetchMovies(\n    fetchAboutMovie + `/${movieId}`\n  );\n\n  console.log(error);\n  console.log(fetchedMovies);\n\n  return (\n    <>\n      <GoBackBtn />\n      {fetchedMovies && (\n        <>\n          <img\n            alt=\"movie poster\"\n            src={\n              fetchedMovies.poster_path\n                ? `${imgBaseUrl}${imgSize}${fetchedMovies.poster_path}`\n                : noPoster\n            }\n          />\n          <div>{fetchedMovies.title}</div>\n          <div>{fetchedMovies.overview}</div>\n          <Link to=\"cast\" state={{ cast: fetchedMovies.credits.cast }}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ reviews: fetchedMovies.reviews }}>\n            Reviews\n          </Link>\n          <Outlet />\n        </>\n      )}\n      {loading && <Loader />}\n    </>\n  );\n}\n","const axios = require('axios');\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'f979c5d182d240e48ce15515a9f4d973';\nconst AUTH_TYPE = '3';\nconst DEFAULT_LANGUAGE = 'en-US';\nconst ADULT_CONTENT = false;\nconst APPENDED_MOVIE_DETAILS = 'credits,reviews';\n\nexport const themoviedbApiService = (fetchParameter, searchQuery) => {\n  axios.defaults.baseURL = BASE_URL;\n  return axios\n    .get(`${AUTH_TYPE}/${fetchParameter}`, {\n      params: {\n        api_key: API_KEY,\n        language: DEFAULT_LANGUAGE,\n        include_adult: ADULT_CONTENT,\n        query: searchQuery,\n        append_to_response: APPENDED_MOVIE_DETAILS,\n      },\n    })\n    .then(({ data }) => {\n      if (data) {\n        return data;\n      } else {\n        throw new Error('Search error');\n      }\n    });\n};\n","import { useState, useEffect } from 'react';\n\nimport { themoviedbApiService } from '../utils';\n\nexport const useFetchMovies = (fetchParameter, searchQuery) => {\n  const [fetchedMovies, setFetchedMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      try {\n        if (searchQuery === null) {\n          return;\n        }\n        const fetchedData = await themoviedbApiService(\n          fetchParameter,\n          searchQuery\n        );\n        return setFetchedMovies(fetchedData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [fetchParameter, searchQuery]);\n  return { fetchedMovies, loading, error };\n};\n"],"names":["GoBackBtn","navigate","useNavigate","onClick","MovieDetailsPage","movieId","useParams","itemId","useFetchMovies","fetchedMovies","loading","error","console","log","alt","src","poster_path","noPoster","title","overview","to","state","cast","credits","reviews","axios","require","themoviedbApiService","fetchParameter","searchQuery","defaults","baseURL","get","params","api_key","language","include_adult","query","append_to_response","then","data","Error","useState","setFetchedMovies","setLoading","setError","useEffect","fetchedData","fetchData"],"sourceRoot":""}